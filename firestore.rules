rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    match /{list=**} {
    	allow create: if request.auth != null;
    
    	match /lists/{listId} {
      	allow read: if resource.data.read_access.hasAny([request.auth.uid]) && request.auth != null;
    		allow read, write: if resource.data.owner_id == request.auth.uid && request.auth != null;
      	
        function haveReadAccess(todoId) {
        	return get(/databases/$(database)/documents/lists/$(listId)).data.read_access.hasAny([request.auth.uid]);
        }
        
        function haveAllAccess(todoId) {
        	return get(/databases/$(database)/documents/lists/$(listId)).data.owner_id == request.auth.uid;
        }

        match /todo/{todoId} {
        allow read: if haveReadAccess(todoId);
    		allow read, write: if haveAllAccess(todoId);
    		}
    	}
    }
    
    match /{users=**} {
    	allow read, write: if request.auth != null;
    }
  }
}